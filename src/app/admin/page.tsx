'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import { supabase } from '@/lib/supabase'
import { testSupabaseConnection } from '@/lib/migration'

export default function AdminPage() {
  const [stats, setStats] = useState({
    totalOrders: 0,
    totalRevenue: 0,
    totalUsers: 0,
    totalProducts: 0
  });
  const [loading, setLoading] = useState(true);
  const [dataSource, setDataSource] = useState<'supabase' | 'localStorage' | 'error'>('supabase');
  const [connectionStatus, setConnectionStatus] = useState<'connected' | 'disconnected' | 'testing'>('testing');

  useEffect(() => {
    loadStats();
  }, []);

  const loadStats = async () => {
    try {
      console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ Supabase...');

      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      const connection = await testSupabaseConnection();
      if (!connection.success) {
        setConnectionStatus('disconnected');
        throw new Error('–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
      }
      setConnectionStatus('connected');

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ Supabase –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      const [
        { count: ordersCount },
        { count: usersCount }, 
        { count: productsCount },
        { data: ordersData }
      ] = await Promise.all([
        supabase.from('orders').select('*', { count: 'exact', head: true }),
        supabase.from('users').select('*', { count: 'exact', head: true }),
        supabase.from('products').select('*', { count: 'exact', head: true }),
        supabase.from('orders').select('total')
      ]);

      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é –≤—ã—Ä—É—á–∫—É
      const totalRevenue = ordersData?.reduce((sum, order) => sum + (order.total || 0), 0) || 0;

      setStats({
        totalOrders: ordersCount || 0,
        totalRevenue: totalRevenue,
        totalUsers: usersCount || 0,
        totalProducts: productsCount || 0
      });

      setDataSource('supabase');
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ Supabase:', {
        orders: ordersCount,
        users: usersCount,
        products: productsCount,
        revenue: totalRevenue
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ Supabase:', error);
      setConnectionStatus('disconnected');
      
      // Fallback –∫ localStorage
      try {
        const storedProducts = localStorage.getItem('juv_products');
        const localProductsCount = storedProducts ? JSON.parse(storedProducts).length : 0;

        setStats({
          totalOrders: 0,
          totalRevenue: 0,
          totalUsers: 0,
          totalProducts: localProductsCount
        });

        setDataSource('localStorage');
        console.log('‚ö†Ô∏è Fallback: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ localStorage');

      } catch (localError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage:', localError);
        setStats({
          totalOrders: 0,
          totalRevenue: 0,
          totalUsers: 0,
          totalProducts: 0
        });
        setDataSource('error');
      }
    } finally {
      setLoading(false);
    }
  };

  const refreshStats = () => {
    setLoading(true);
    loadStats();
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
          <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏, —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</p>
        </div>
        <button
          onClick={refreshStats}
          disabled={loading}
          className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 transition-colors"
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å
        </button>
      </div>

      {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
      <div className={`p-4 rounded-lg border ${
        connectionStatus === 'connected' ? 'bg-green-50 border-green-200' :
        connectionStatus === 'disconnected' ? 'bg-red-50 border-red-200' :
        'bg-yellow-50 border-yellow-200'
      }`}>
        <div className="flex items-center justify-between">
          <div>
            <h3 className="font-semibold">
              {connectionStatus === 'connected' && '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Supabase'}
              {connectionStatus === 'disconnected' && '‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase'}
              {connectionStatus === 'testing' && 'üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...'}
            </h3>
            <p className="text-sm text-gray-600">
              {connectionStatus === 'connected' && `–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: ${dataSource === 'supabase' ? '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö' : '–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ'}`}
              {connectionStatus === 'disconnected' && '–†–∞–±–æ—Ç–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ fallback —Å localStorage'}
              {connectionStatus === 'testing' && '–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...'}
            </p>
          </div>
          <div className="text-2xl">
            {connectionStatus === 'connected' && 'üü¢'}
            {connectionStatus === 'disconnected' && 'üî¥'}
            {connectionStatus === 'testing' && 'üü°'}
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white p-6 rounded-lg shadow">
          <div className="flex items-center">
            <div className="p-2 bg-blue-100 rounded-lg">
              <span className="text-2xl">üì¶</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">–ó–∞–∫–∞–∑–æ–≤</p>
              <p className="text-2xl font-bold text-gray-900">{stats.totalOrders}</p>
              {stats.totalOrders === 0 && (
                <p className="text-xs text-gray-500">–ó–∞–∫–∞–∑—ã –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–∏</p>
              )}
            </div>
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow">
          <div className="flex items-center">
            <div className="p-2 bg-green-100 rounded-lg">
              <span className="text-2xl">üí∞</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">–í—ã—Ä—É—á–∫–∞</p>
              <p className="text-2xl font-bold text-gray-900">
                {stats.totalRevenue.toLocaleString()} ‚ÇΩ
              </p>
              {stats.totalRevenue === 0 && (
                <p className="text-xs text-gray-500">–í—ã—Ä—É—á–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞</p>
              )}
            </div>
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow">
          <div className="flex items-center">
            <div className="p-2 bg-purple-100 rounded-lg">
              <span className="text-2xl">üë•</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
              <p className="text-2xl font-bold text-gray-900">{stats.totalUsers}</p>
              {stats.totalUsers === 0 && (
                <p className="text-xs text-gray-500">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
              )}
            </div>
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow">
          <div className="flex items-center">
            <div className="p-2 bg-yellow-100 rounded-lg">
              <span className="text-2xl">üõç</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">–¢–æ–≤–∞—Ä–æ–≤</p>
              <p className="text-2xl font-bold text-gray-900">{stats.totalProducts}</p>
              {stats.totalProducts === 0 && (
                <p className="text-xs text-gray-500">
                  <Link href="/admin/products/add" className="text-blue-600 hover:underline">
                    –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä
                  </Link>
                </p>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white rounded-lg shadow">
        <div className="px-6 py-4 border-b">
          <h2 className="text-lg font-semibold text-gray-900">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        </div>
        <div className="p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <Link
              href="/admin/products/add"
              className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors"
            >
              <div className="text-2xl mb-2">‚ûï</div>
              <h3 className="font-medium text-gray-900">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</h3>
              <p className="text-sm text-gray-600">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</p>
            </Link>
            
            <Link
              href="/admin/products"
              className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors"
            >
              <div className="text-2xl mb-2">üì¶</div>
              <h3 className="font-medium text-gray-900">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</h3>
              <p className="text-sm text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤</p>
            </Link>
            
            <Link
              href="/admin/orders"
              className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors"
            >
              <div className="text-2xl mb-2">üìã</div>
              <h3 className="font-medium text-gray-900">–ó–∞–∫–∞–∑—ã</h3>
              <p className="text-sm text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤</p>
            </Link>
            
            <Link
              href="/admin/debug"
              className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors"
            >
              <div className="text-2xl mb-2">üîß</div>
              <h3 className="font-medium text-gray-900">–û—Ç–ª–∞–¥–∫–∞</h3>
              <p className="text-sm text-gray-600">–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º</p>
            </Link>
          </div>
        </div>
      </div>

      {/* –ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
      {dataSource === 'supabase' && (
        <div className="bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b">
            <h2 className="text-lg font-semibold text-gray-900">–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞</h2>
          </div>
          <div className="p-6">
            <div className="text-center py-8">
              <div className="text-4xl mb-4">üéâ</div>
              <h3 className="text-lg font-medium text-gray-900 mb-2">
                –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Supabase –∞–∫—Ç–∏–≤–Ω–∞!
              </h3>
              <p className="text-gray-600 mb-4">
                –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –æ–±–ª–∞—á–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
              </p>
              <div className="flex justify-center space-x-4">
                <Link
                  href="/admin/products/add"
                  className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
                >
                  –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä
                </Link>
                <Link
                  href="/admin/debug"
                  className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors"
                >
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
                </Link>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
