'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import { supabase } from '@/lib/supabase'
import { migrateLocalStorageToSupabase, syncSupabaseToLocalStorage, testSupabaseConnection } from '@/lib/migration'

export default function DebugPage() {
  const [debugInfo, setDebugInfo] = useState({
    localStorageAvailable: false,
    rawData: null as string | null,
    parsedData: null as any,
    error: null as string | null,
    timestamp: null as string | null
  });

  const [supabaseInfo, setSupabaseInfo] = useState({
    connected: false,
    productsCount: 0,
    ordersCount: 0,
    usersCount: 0,
    error: null as string | null
  });

  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);

  useEffect(() => {
    if (!isClient) return;
    checkLocalStorage();
    checkSupabase();
  }, [isClient]);

  const checkLocalStorage = () => {
    try {
      const available = typeof window !== 'undefined' && window.localStorage;
      const rawData = available ? localStorage.getItem('juv_products') : null;
      let parsedData = null;
      let error = null;

      if (rawData) {
        try {
          parsedData = JSON.parse(rawData);
        } catch (parseError) {
          error = `–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${parseError instanceof Error ? parseError.message : 'Unknown error'}`;
        }
      }

      setDebugInfo({
        localStorageAvailable: !!available,
        rawData,
        parsedData,
        error,
        timestamp: new Date().toLocaleString()
      });

      console.log('üîç Debug info:', {
        localStorageAvailable: !!available,
        rawData,
        parsedData,
        error
      });
    } catch (error) {
      setDebugInfo(prev => ({ 
        ...prev, 
        error: error instanceof Error ? error.message : 'Unknown error',
        timestamp: new Date().toLocaleString()
      }));
    }
  };

  const checkSupabase = async () => {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...');
      
      const connection = await testSupabaseConnection();
      if (!connection.success) {
        setSupabaseInfo(prev => ({
          ...prev,
          connected: false,
          error: connection.error || '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'
        }));
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ Supabase
      const [
        { count: productsCount },
        { count: ordersCount },
        { count: usersCount }
      ] = await Promise.all([
        supabase.from('products').select('*', { count: 'exact', head: true }),
        supabase.from('orders').select('*', { count: 'exact', head: true }),
        supabase.from('users').select('*', { count: 'exact', head: true })
      ]);

      setSupabaseInfo({
        connected: true,
        productsCount: productsCount || 0,
        ordersCount: ordersCount || 0,
        usersCount: usersCount || 0,
        error: null
      });

      console.log('‚úÖ Supabase —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', {
        products: productsCount,
        orders: ordersCount,
        users: usersCount
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Supabase:', error);
      setSupabaseInfo(prev => ({
        ...prev,
        connected: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      }));
    }
  };

  const addTestProduct = async () => {
    if (!isClient) return;

    try {
      const testProduct = {
        name: `–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä ${Date.now()}`,
        description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏',
        price: Math.floor(Math.random() * 10000) + 1000,
        image_url: 'https://via.placeholder.com/300x200',
        category: 'rings',
        in_stock: true
      };

      console.log('üì§ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≤ Supabase:', testProduct);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ Supabase
      const { data: supabaseProduct, error: supabaseError } = await supabase
        .from('products')
        .insert(testProduct)
        .select()
        .single();

      if (supabaseError) {
        throw new Error(`Supabase: ${supabaseError.message}`);
      }

      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ Supabase:', supabaseProduct);

      // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ localStorage
      if (window.localStorage) {
        const localProduct = {
          id: supabaseProduct.id,
          ...testProduct,
          createdAt: supabaseProduct.created_at
        };

        const existingProducts = JSON.parse(localStorage.getItem('juv_products') || '[]');
        existingProducts.push(localProduct);
        localStorage.setItem('juv_products', JSON.stringify(existingProducts));
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ localStorage');
      }

      alert('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Supabase –∏ localStorage!');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      checkLocalStorage();
      checkSupabase();

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:', error);
      alert(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : 'Unknown error'}`);
    }
  };

  const clearAllProducts = async () => {
    if (!isClient) return;

    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï —Ç–æ–≤–∞—Ä—ã –∏–∑ Supabase –∏ localStorage?')) {
      try {
        // –£–¥–∞–ª—è–µ–º –∏–∑ Supabase
        const { error: supabaseError } = await supabase
          .from('products')
          .delete()
          .neq('id', '00000000-0000-0000-0000-000000000000'); // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏

        if (supabaseError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Supabase:', supabaseError);
        } else {
          console.log('‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ Supabase');
        }

        // –£–¥–∞–ª—è–µ–º –∏–∑ localStorage
        localStorage.removeItem('juv_products');
        console.log('‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ localStorage');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        checkLocalStorage();
        checkSupabase();

        alert('‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ Supabase –∏ localStorage!');

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        alert(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : 'Unknown error'}`);
      }
    }
  };

  const handleMigration = async () => {
    try {
      const result = await migrateLocalStorageToSupabase();
      
      if (result.success) {
        alert(`‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${result.migrated} –∏–∑ ${result.total}`);
        checkSupabase();
      } else {
        alert(`‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: ${result.error}`);
      }
    } catch (error) {
      alert(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  const handleSync = async () => {
    try {
      const result = await syncSupabaseToLocalStorage();
      
      if (result.success) {
        alert(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${result.synced}`);
        checkLocalStorage();
      } else {
        alert(`‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${result.error}`);
      }
    } catch (error) {
      alert(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  if (!isClient) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">–û—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h1>
          <p className="text-gray-600">–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ localStorage –∏ Supabase</p>
        </div>
        <Link
          href="/admin/products"
          className="text-blue-600 hover:text-blue-700"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ —Ç–æ–≤–∞—Ä–∞–º
        </Link>
      </div>

      {/* –°—Ç–∞—Ç—É—Å Supabase */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">–°—Ç–∞—Ç—É—Å Supabase</h2>
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center">
              <span className={`w-3 h-3 rounded-full mr-2 ${
                supabaseInfo.connected ? 'bg-green-500' : 'bg-red-500'
              }`}></span>
              <span className="text-sm">
                –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {supabaseInfo.connected ? '–ê–∫—Ç–∏–≤–Ω–æ' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
              </span>
            </div>
            <button
              onClick={checkSupabase}
              className="px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700"
            >
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
            </button>
          </div>

          {supabaseInfo.connected && (
            <div className="grid grid-cols-3 gap-4 p-4 bg-green-50 rounded-lg">
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">{supabaseInfo.productsCount}</div>
                <div className="text-sm text-gray-600">–¢–æ–≤–∞—Ä–æ–≤</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">{supabaseInfo.ordersCount}</div>
                <div className="text-sm text-gray-600">–ó–∞–∫–∞–∑–æ–≤</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">{supabaseInfo.usersCount}</div>
                <div className="text-sm text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
              </div>
            </div>
          )}

          {supabaseInfo.error && (
            <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
              <h3 className="text-red-800 font-semibold">–û—à–∏–±–∫–∞ Supabase:</h3>
              <p className="text-red-600 text-sm">{supabaseInfo.error}</p>
            </div>
          )}
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å localStorage */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">–°—Ç–∞—Ç—É—Å localStorage</h2>
        <div className="space-y-2">
          <div className="flex items-center">
            <span className={`w-3 h-3 rounded-full mr-2 ${
              debugInfo.localStorageAvailable ? 'bg-green-500' : 'bg-red-500'
            }`}></span>
            <span className="text-sm">
              localStorage {debugInfo.localStorageAvailable ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
            </span>
          </div>
          {debugInfo.timestamp && (
            <p className="text-xs text-gray-500">–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {debugInfo.timestamp}</p>
          )}
          {debugInfo.parsedData && Array.isArray(debugInfo.parsedData) && (
            <p className="text-sm text-green-600">
              –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ localStorage: {debugInfo.parsedData.length}
            </p>
          )}
        </div>
      </div>

      {/* –û—à–∏–±–∫–∏ */}
      {debugInfo.error && (
        <div className="bg-red-50 border border-red-200 rounded-lg p-4">
          <h3 className="text-red-800 font-semibold">–û—à–∏–±–∫–∞ localStorage:</h3>
          <p className="text-red-600">{debugInfo.error}</p>
        </div>
      )}

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">–î–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
          <button
            onClick={addTestProduct}
            className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
          >
            –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä
          </button>
          <button
            onClick={handleMigration}
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
          >
            –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ Supabase
          </button>
          <button
            onClick={handleSync}
            className="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition-colors"
          >
            –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å
          </button>
          <button
            onClick={clearAllProducts}
            className="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
          </button>
          <button
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors"
          >
            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
          <button
            onClick={() => {
              checkLocalStorage();
              checkSupabase();
            }}
            className="px-4 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700 transition-colors"
          >
            –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
          </button>
        </div>
      </div>

      {/* –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ localStorage */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">–°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ localStorage</h2>
        <div className="bg-gray-100 p-4 rounded-md">
          <pre className="text-xs text-gray-700 whitespace-pre-wrap break-all">
            {debugInfo.rawData || 'null (–ø—É—Å—Ç–æ)'}
          </pre>
        </div>
      </div>

      {/* –ü–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">–ü–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ localStorage</h2>
        <div className="bg-gray-100 p-4 rounded-md">
          <pre className="text-xs text-gray-700 whitespace-pre-wrap">
            {debugInfo.parsedData ? JSON.stringify(debugInfo.parsedData, null, 2) : 'null (–ø—É—Å—Ç–æ)'}
          </pre>
        </div>
        {debugInfo.parsedData && Array.isArray(debugInfo.parsedData) && (
          <p className="text-sm text-gray-600 mt-2">
            –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {debugInfo.parsedData.length}
          </p>
        )}
      </div>
    </div>
  );
}
